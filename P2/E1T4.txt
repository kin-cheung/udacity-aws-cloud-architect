Based on the architecture diagram, and the steps you have taken so far to upload data and access the application web service, identify at least 2 obvious poor practices as it relates to security.  Include justification.

# Poor practice 1
An access key is used to upload data and it is a security vulnerability since the access key is stored locally on the user's computer.

# Poor practice 2
Use HTTP instead of HTTPS. HTTPS can be used to secure the communication between users and the application to prevent man-in-the-middle attacks etc.

# Poor practice 3
Avoid using CLI to upload data to S3. Using a browser to do that is more secure.

# Poor practice 4
S3 bucket in this case should not allow public direct access, so block all public access should be enabled.

# Poor practice 5
Although a profile role has been assigned to the web service instance but the policy assigned to the role allows full access to the S3 bucket that should be restricted to GetObject only

p.s. One thing I don't understand here is what is supposed to be wrong with the way the application web service is accessed? Accessing the URL http://c1-web-service-alb-436165273.us-east-1.elb.amazonaws.com/free_recipe in a  browser is bad? HTTP is bad? or else? because I don't see anything wrong with the way the application web service is accessed.

Also, I know that using CLI to upload data to S3 is bad because we need to use an API key explicitly, so what is the preferred way? I have googled about it and people on the internet recommand using AWS console with a browser to do that and actually it is how I uploaded the files for this exercise too.

Thanks